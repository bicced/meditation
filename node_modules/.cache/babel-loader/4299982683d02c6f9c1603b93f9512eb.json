{"ast":null,"code":"var _jsxFileName = \"/Users/jeff/Desktop/Projects/meditation/src/pages/Homepage.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, WingBlank, WhiteSpace } from 'antd-mobile';\nimport med from \"../media/med.jpg\";\nimport 'antd/dist/antd.css';\nimport { StarFilled, PlayCircleFilled } from '@ant-design/icons';\nimport AudioPlayer from '../components/AudioPlayer';\nimport firebase from '../firebase.js';\n\nconst medaudio = require(\"../media/medaudio.mp3\");\n\nconst title2 = require(\"../media/title2.mp3\");\n\nfunction Homepage() {\n  const [clips, setClips] = useState([{\n    title: \"Title1\",\n    url: medaudio\n  }, {\n    title: \"Title2\",\n    url: title2\n  }, {\n    title: \"Title3\",\n    url: medaudio\n  }, {\n    title: \"Title4\",\n    url: medaudio\n  }]);\n  const [audio, setAudio] = useState();\n  useEffect(() => {\n    firebase.firestore().collection('Audio').add({\n      url: \"nerd\"\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Homepage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Meditation\"), audio ? /*#__PURE__*/React.createElement(AudioPlayer, {\n    audio: audio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Clips\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, clips.map(clip => {\n    return /*#__PURE__*/React.createElement(WingBlank, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(WhiteSpace, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      title: clip.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: med,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Card.Footer, {\n      content: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ClipFooter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(PlayCircleFilled, {\n        onClick: () => setAudio(clip.url),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(StarFilled, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(WhiteSpace, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  })));\n}\n\nexport default Homepage;","map":{"version":3,"sources":["/Users/jeff/Desktop/Projects/meditation/src/pages/Homepage.tsx"],"names":["React","useState","useEffect","Card","WingBlank","WhiteSpace","med","StarFilled","PlayCircleFilled","AudioPlayer","firebase","medaudio","require","title2","Homepage","clips","setClips","title","url","audio","setAudio","firestore","collection","add","map","clip"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,QAA4C,aAA5C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,oBAAP;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,mBAA7C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,uBAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,qBAAD,CAAtB;;AAEA,SAASE,QAAT,GAAoB;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAChC,CACE;AAACgB,IAAAA,KAAK,EAAC,QAAP;AAAiBC,IAAAA,GAAG,EAAEP;AAAtB,GADF,EAEE;AAACM,IAAAA,KAAK,EAAC,QAAP;AAAiBC,IAAAA,GAAG,EAAEL;AAAtB,GAFF,EAGE;AAACI,IAAAA,KAAK,EAAC,QAAP;AAAiBC,IAAAA,GAAG,EAAEP;AAAtB,GAHF,EAIE;AAACM,IAAAA,KAAK,EAAC,QAAP;AAAiBC,IAAAA,GAAG,EAAEP;AAAtB,GAJF,CADgC,CAAlC;AAOA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACW,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6C;AAC3CL,MAAAA,GAAG,EAAE;AADsC,KAA7C;AAGD,GAJQ,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEIC,KAAK,gBAAG,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAkC,IAF3C,eAGE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AAClB,wBACE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AACE,MAAA,KAAK,EAAEA,IAAI,CAACR,KADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEX,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,eAOE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,eAClB;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAE,MAAMc,QAAQ,CAACK,IAAI,CAACP,GAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAFJ,eAgBE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CADF;AAoBD,GArBD,CAFJ,CAHF,CADF;AAgCD;;AAED,eAAeJ,QAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { Card, WingBlank, WhiteSpace } from 'antd-mobile';\nimport med from \"../media/med.jpg\";\nimport 'antd/dist/antd.css';\nimport { StarFilled, PlayCircleFilled } from '@ant-design/icons';\nimport AudioPlayer from '../components/AudioPlayer';\nimport firebase from '../firebase.js';\nconst medaudio = require(\"../media/medaudio.mp3\");\nconst title2 = require(\"../media/title2.mp3\");\n\nfunction Homepage() {\n  const [clips, setClips] = useState(\n    [\n      {title:\"Title1\", url: medaudio},\n      {title:\"Title2\", url: title2},\n      {title:\"Title3\", url: medaudio},\n      {title:\"Title4\", url: medaudio}\n    ]);\n  const [audio, setAudio] = useState();\n\n  useEffect(() => {\n    firebase.firestore().collection('Audio').add({\n      url: \"nerd\"\n    })\n  })\n\n\n  return (\n    <div className=\"Homepage\" >\n      <h1>Meditation</h1>\n      { audio ? <AudioPlayer audio={audio}/> : null}\n      <div className=\"Clips\" >\n        {\n          clips.map((clip) => {\n            return (\n              <WingBlank size=\"lg\">\n                <WhiteSpace size=\"lg\" />\n                  <Card>\n                    <Card.Header\n                      title={clip.title}\n                    />\n                    <Card.Body>\n                      <img src={med} />\n                    </Card.Body>\n                    <Card.Footer content={\n                      <div className=\"ClipFooter\" >\n                        <PlayCircleFilled onClick={() => setAudio(clip.url)}/>\n                        <StarFilled />\n                      </div>\n                    } />\n                  </Card>\n                <WhiteSpace size=\"lg\" />\n              </WingBlank>\n            )\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Homepage;\n"]},"metadata":{},"sourceType":"module"}